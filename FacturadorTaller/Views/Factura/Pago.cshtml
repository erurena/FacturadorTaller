@model FacturadorTaller.ViewModel.PagoViewModel
@{
    ViewBag.Title = "Pagos";
}

<h2>PAGOS</h2>

@using (Html.BeginForm("Pago", "Factura", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return (Validate());" }))
{
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Factura.FacturaId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Factura.FacturaId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Factura.CotizacionId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Factura.CotizacionId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Factura.Ncf)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Factura.Ncf)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SumPago)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SumPago)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Balance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Balance)
        </dd>
    </dl>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Factura.FacturaId)
    @Html.HiddenFor(model => model.Factura.OrdenCompraNu)
    @Html.HiddenFor(model => model.Balance, new { id = "Bal" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.PagoFac)
        @Html.TextBoxFor(model => model.PagoFac, new { @class = "form-control", id = "Pag" })
        @Html.ValidationMessageFor(model => model.PagoFac, "", new { @class = "text-danger" })
    </div>
    <div>
        <h4>@ViewBag.PagoInv</h4>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Pago.Categoria)
        @Html.RadioButtonFor(model => model.Pago.Categoria, "Efectivo", new { @checked = true }) Efectivo
        @Html.RadioButtonFor(model => model.Pago.Categoria, "Cheque") Cheque
        @Html.RadioButtonFor(model => model.Pago.Categoria, "Cheque") Transferencia
        @Html.ValidationMessageFor(model => model.Pago.Categoria, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Fecha)
        @Html.TextBoxFor(model => model.Fecha, new { @class = "form-control", @Value = DateTime.Now.ToString("dd/MM/yyyy"), @readonly = true })
        @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Pagar" class="btn btn-primary btn-lg" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("Volver a lista", "Index")

</div>
<script>
    function Validate() {
        var netoFactura = $("#Bal").val();
        var pagoFactura = $("#Pag").val();
        if (pagoFactura > netoFactura) {
            alert("El Monto Pagado no puede ser mayor al balance pendiente. ");
            return false;
        }
        return true;
    };
</script>