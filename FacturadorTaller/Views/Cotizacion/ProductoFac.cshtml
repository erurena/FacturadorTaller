@model FacturadorTaller.ViewModel.DetalleCotViewModel
@{
    ViewBag.Title = "DetalleCotizacion";
}

<h2>Cotizacion</h2>

@using (Html.BeginForm("ProductoFac", "Cotizacion", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Cotizacion.CotizacionId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cotizacion.CotizacionId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cotizacion.Clientes.NombreCliente)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cotizacion.Clientes.NombreCliente)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Cotizacion.Clientes.RncCliente)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cotizacion.Clientes.RncCliente)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Cotizacion.TotalFactura)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cotizacion.TotalFactura)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Cotizacion.Itbis)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cotizacion.Itbis)
        </dd>

    </dl>
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Cotizacion.CotizacionId)
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="producto-label">
        <H4>Producto:</H4>
    </div>
    <input id="producto">
    <input type="hidden" name="productoId" id="productoId">

    <div class="form-group">
        @Html.LabelFor(model => model.Cantidad)
        @Html.TextBoxFor(model => model.Cantidad, new { @class = "form-control", @Value = 1 })
        @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FichaVehiculo)
        @Html.TextBoxFor(model => model.FichaVehiculo, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FichaVehiculo, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Valor)
        @Html.TextBoxFor(model => model.Valor, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Comentario)
        @Html.TextBoxFor(model => model.Comentario, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Agregar" class="btn btn-primary btn-lg" />
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            CANTIDAD
        </th>
        <th>
            PRODUCTO
        </th>
        <th>
            PRECIO
        </th>
        <th>
            FICHA VEHICULO
        </th>
        <th>
            COMENTARIO
        </th>
    </tr>

    @foreach (var item in Model.DetalleCot)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelitem => item.Cantidad)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Producto.NombreProducto)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Valor)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.FichaVehiculo)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Comentario)
            </td>
            <td>
                @Html.ActionLink("Eliminar", "ProDelete", new { id = item.DetalleCotId })
            </td>
            <td>
                @Html.ActionLink("Editar", "ProEdit", new { id = item.DetalleCotId })
            </td>
        </tr>
    }


</table>
@{decimal totalFac = 0; }

@foreach (var c in Model.DetalleCot)
{
    if (c.Producto.Categoria == "Servicio")
    {
        totalFac += c.Valor;
    }
}
@{decimal totalCos = 0; }

@foreach (var c in Model.DetalleCot)
{
    if (c.Producto.Categoria == "Producto")
    {
        totalCos += c.Valor;
    }
}

<H2>Total Facturado : @totalFac </H2>
<H2>Total Costo: @totalCos</H2>
<H2>Ganancia: @totalFac- @totalCos</H2>
<br />
<div>
    @Html.ActionLink("Volver a lista", "Index") |
    @Html.ActionLink("Email", "Email", new { id = Model.Cotizacion.CotizacionId })

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script>
        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });

        $.getJSON('/Cotizacion/GetProductos', function (data, jqXHR) {
            var results = $.map(data, function (item) {
                return {
                    label: item.NombreProducto,
                    value: item.ProductoId
                }
            });//Remenber Map object
            setupAutocomplete(results);

        });

        function setupAutocomplete(results) {
            $('#producto').autocomplete({
                source: results,
                minLength: 2,
                focus: function (event, ui) {
                    $("#producto").val(ui.item.label);
                    return false;
                },
                select: function (event, ui) {
                    //log( ui.item ? "Selected: " + ui.item.label :"Nothing selected, input was " + this.value);

                    $("#producto").val(ui.item.label);
                    $("#productoId").val(ui.item.value);


                    return false;

                }
            }).autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                    .append("<div>" + item.label + "</div>")
                    .appendTo(ul);
            };
        }

    </script>

}
