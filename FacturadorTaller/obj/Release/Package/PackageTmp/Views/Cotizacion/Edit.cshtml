@model FacturadorTaller.ViewModel.CotizacionViewModel

@{
    ViewBag.Title = "Editar Cotizacion";
}

<h2>Editar Cotizacion</h2>

@using (Html.BeginForm("Edit", "Cotizacion", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="cliente-label">
        <H4>Cliente:</H4>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Cotizacion.Clientes.NombreCliente)
        @Html.TextBoxFor(model => model.Cotizacion.Clientes.NombreCliente, new { @class = "form-control", id = "cliente" })
        @Html.ValidationMessageFor(model => model.Cotizacion.Clientes.NombreCliente, "", new { @class = "text-danger" })
    </div>
    @Html.HiddenFor(model => model.Cotizacion.Clientes.ClienteId, new { id = "clienteId" })
    /*<input id="cliente">
    <input type="hidden" name="clienteId" id="clienteId*/

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha)
        @Html.TextBoxFor(model => model.Fecha, new { @class = "form-control", @Value = DateTime.Now.ToString("dd/MM/yyyy") })
        @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Cotizacion.Nota)
        @Html.TextAreaFor(model => model.Cotizacion.Nota, new { @class = "form-control", rows = "10" })
        @Html.ValidationMessageFor(model => model.Cotizacion.Nota, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Modificar" class="btn btn-primary btn-lg" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("Volver a lista", "Index")

</div>
<br />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script>
        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });

        $.getJSON('/Cotizacion/GetClientes', function (data, jqXHR) {
            var results = $.map(data, function (item) {
                return {
                    label: item.NombreCliente,
                    value: item.ClienteId
                }
            });//Remenber Map object
            setupAutocomplete(results);

        });

        function setupAutocomplete(results) {
            $('#cliente').autocomplete({
                source: results,
                minLength: 2,
                focus: function (event, ui) {
                    $("#cliente").val(ui.item.label);
                    return false;
                },
                select: function (event, ui) {
                    //log( ui.item ? "Selected: " + ui.item.label :"Nothing selected, input was " + this.value);

                    $("#cliente").val(ui.item.label);
                    $("#clienteId").val(ui.item.value);


                    return false;

                }
            }).autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                    .append("<div>" + item.label + "</div>")
                    .appendTo(ul);
            };
        }

    </script>

}